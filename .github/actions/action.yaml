name: 'AppDynamics Automation'
description: 'Composite action to generate AppDynamics reports'

inputs:
  HOSTURL:
    description: 'The host URL for AppDynamics.'
    required: true
  USERNAME:
    description: 'The username for AppDynamics.'
    required: true
  CLIENT_SECRET:
    description: 'The client secret for AppDynamics.'
    required: true
  ACCOUNT_ID:
    description: 'The account ID for AppDynamics.'
    required: true
  AUTH_URI:
    description: 'The authentication URI for AppDynamics.'
    required: true
  cred_file:
    description: 'Path to credentials file'
    required: true
  debug_level:
    description: 'Debug level'
    required: false
    default: '5'
  output_format:
    description: 'Output format (e.g., json, xml)'
    required: false
    default: 'json'
  app_name:
    description: 'Application name'
    required: true
  transaction_name:
    description: 'Business transaction name'
    required: true  

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r .github/actions/requirements.txt
      shell: bash

    - name: Create credentials.ini file
      run: |
        echo "[credentials]
        hosturl=${{ inputs.HOSTURL }}
        username=${{ inputs.USERNAME }}
        clientsecret=${{ inputs.CLIENT_SECRET }}
        accountid=${{ inputs.ACCOUNT_ID }}
        authuri=${{ inputs.AUTH_URI }}" > .github/actions/credentials.ini
      shell: bash

    - name: Validate credentials.ini
      run: |
        if [ ! -f .github/actions/credentials.ini ]; then
          echo "Error: credentials.ini not found!"
          exit 1
        fi
      shell: bash

    - name: Run AppDynamics API script
      run: |
        chmod +x .github/actions/run_appdynamics.sh
        .github/actions/run_appdynamics.sh
      shell: bash
      env:
        CRED_FILE: ${{ inputs.cred_file }}
        DEBUG_LEVEL: ${{ inputs.debug_level }}
        OUTPUT_FORMAT: ${{ inputs.output_format }}
        APP_NAME: ${{ inputs.app_name }}
        TRANSACTION_NAME: ${{ inputs.transaction_name }}

    - name: Upload generated bt.csv as artifact
      uses: actions/upload-artifact@v4
      with:
        name: Appd-report
        path: ./temp

    - name: Clean up credentials file (if applicable)
      run: |
        if [ -f .github/actions/credentials.ini ]; then
          rm .github/actions/credentials.ini
        fi
      shell: bash
